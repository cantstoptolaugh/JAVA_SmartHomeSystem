/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package command;

import ForLogin.LoginForm;
import Main.MainDisplay;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JSlider;

/**
 *
 * @author LG
 */
public class GUI_Command extends javax.swing.JFrame {
    
    RemoteControl remote = new RemoteControl(); //인보커 생성 - 명령을 저장하고 관리.
    Command none = new NoCommand(); 
    Refrigerator kitchenRefrigerator = new Refrigerator("Kitchen"); //  리시버 생성 - 명령의 실제 처리를 수행.
    Heating livingRoomHeating =null;
    int usedRefEnergy=0;
    int usedHeatingEnergy=0;
    int usedLedEnergy=0;
    public static int usedEnergy=0;

    String refOnOffState = "OFF"; 
    String heatingLivingRoomOnOffState= "OFF"; 


    /**
     * Creates new form NewJFrame
     */
  public enum Receiver {
        HEATING, LED, REF
    }
 public void checkState(JSlider s) {
     
 }
    public GUI_Command() {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setVisible(true);
        commandMainLabel.setText(LoginForm.SessionID+"님의 누적 전기 사용량");
        usedELabel.setText(usedEnergy +"kwh");
        remoteControlInit();

        refTempLabel.setText(""+ 0);
        refOnOffLabel.setText(refOnOffState);
        
         ledTempLabel.setText(""+ 0);
        ledOnOffLabel.setText(refOnOffState);
        
         heatingLivingRoomTempLabel.setText(""+0);
        livingRoomLabel2.setText(refOnOffState);
        
        refSlider.setMajorTickSpacing(1); //큰 눈금 간격 5로 설정
        refSlider.setPaintTicks(true); //눈금을 표시한다.
        refSlider.setPaintLabels(true); 
        
        ledSlider.setMajorTickSpacing(1); //큰 눈금 간격 5로 설정
        ledSlider.setPaintTicks(true); //눈금을 표시한다.
        ledSlider.setPaintLabels(true); 
        
        heatingLivingRoomSlider.setMajorTickSpacing(5); //큰 눈금 간격 5로 설정
        heatingLivingRoomSlider.setPaintTicks(true); //눈금을 표시한다.
        heatingLivingRoomSlider.setPaintLabels(true); 

    }
  public void remoteControlInit() {
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        refFrame = new javax.swing.JFrame();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        refSlider = new javax.swing.JSlider();
        refOnBtn = new javax.swing.JButton();
        refOffBtn = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        refTempLabel = new javax.swing.JLabel();
        refOnOffLabel = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        refELabel = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        ledFrame = new javax.swing.JFrame();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ledSlider = new javax.swing.JSlider();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        ledTempLabel = new javax.swing.JLabel();
        ledOnOffLabel = new javax.swing.JLabel();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        heatingFrame = new javax.swing.JFrame();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        heatingLivingRoomSlider = new javax.swing.JSlider();
        heatingOnLivingRoomBtn = new javax.swing.JButton();
        heatingOffLivingRoomBtn = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        heatingLivingRoomTempLabel = new javax.swing.JLabel();
        livingRoomLabel2 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        heatingOnRoom1Btn = new javax.swing.JButton();
        heatingOffRoom2Btn = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        room1Label1 = new javax.swing.JLabel();
        room1Label2 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        heatingRoom1Slider = new javax.swing.JSlider();
        jLabel28 = new javax.swing.JLabel();
        heatingELabel = new javax.swing.JLabel();
        jMenuBar4 = new javax.swing.JMenuBar();
        jMenu7 = new javax.swing.JMenu();
        jMenu8 = new javax.swing.JMenu();
        jLabel20 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btn_heatingCommand = new javax.swing.JButton();
        btn_ledCommand = new javax.swing.JButton();
        btn_refCommand = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        commandMainLabel = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        usedELabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        refFrame.setBackground(new java.awt.Color(0, 255, 51));

        jLabel2.setFont(new java.awt.Font("맑은 고딕", 1, 15)); // NOI18N
        jLabel2.setText("냉장고 제어");

        jLabel3.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel3.setText("온도 제어");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel4.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel4.setText("전원 제어");

        refSlider.setMaximum(6);
        refSlider.setValue(3);
        refSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                refSliderStateChanged(evt);
            }
        });
        refSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                refSliderMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                refSliderMouseReleased(evt);
            }
        });

        refOnBtn.setBackground(new java.awt.Color(0, 0, 0));
        refOnBtn.setForeground(new java.awt.Color(255, 255, 255));
        refOnBtn.setText("ON");
        refOnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refOnBtnActionPerformed(evt);
            }
        });

        refOffBtn.setText("OFF");
        refOffBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refOffBtnActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel18.setText("현재 냉장실 온도");

        jLabel19.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel19.setText("현재 전원 상태");

        refTempLabel.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        refTempLabel.setForeground(new java.awt.Color(0, 153, 255));
        refTempLabel.setText("현재 온도");

        refOnOffLabel.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        refOnOffLabel.setForeground(new java.awt.Color(0, 153, 255));
        refOnOffLabel.setText("OFF");

        jLabel22.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel22.setText("현재 전력 시용량");

        refELabel.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        refELabel.setForeground(new java.awt.Color(0, 153, 255));
        refELabel.setText("0  KWh");

        jMenu3.setText("메뉴");

        jMenu4.setText("뒤로가기");
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenu3.add(jMenu4);

        jMenuBar2.add(jMenu3);

        refFrame.setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout refFrameLayout = new javax.swing.GroupLayout(refFrame.getContentPane());
        refFrame.getContentPane().setLayout(refFrameLayout);
        refFrameLayout.setHorizontalGroup(
            refFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator5)
            .addGroup(refFrameLayout.createSequentialGroup()
                .addGroup(refFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(refFrameLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(refFrameLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(refFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(38, 38, 38)
                        .addGroup(refFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(refFrameLayout.createSequentialGroup()
                                .addComponent(refOnBtn)
                                .addGap(44, 44, 44)
                                .addComponent(refOffBtn))
                            .addComponent(refSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(refFrameLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(refFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(refFrameLayout.createSequentialGroup()
                                .addGroup(refFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel22))
                                .addGap(28, 28, 28)
                                .addGroup(refFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(refELabel)
                                    .addComponent(refTempLabel)))
                            .addGroup(refFrameLayout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(28, 28, 28)
                                .addComponent(refOnOffLabel)))))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        refFrameLayout.setVerticalGroup(
            refFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(refFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(refFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(refOnBtn)
                    .addComponent(refOffBtn))
                .addGroup(refFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(refFrameLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel3))
                    .addGroup(refFrameLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(refSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(refFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(refOnOffLabel))
                .addGap(18, 18, 18)
                .addGroup(refFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(refTempLabel))
                .addGap(18, 18, 18)
                .addGroup(refFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(refELabel))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jLabel5.setFont(new java.awt.Font("맑은 고딕", 1, 15)); // NOI18N
        jLabel5.setText("LED 조명 제어");

        jLabel6.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel6.setText("조명 제어");
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel7.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel7.setText("전원 제어");

        ledSlider.setMaximum(10);
        ledSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ledSliderStateChanged(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(0, 0, 0));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("ON");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("OFF");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel16.setText("현재 LED 밝기");

        jLabel17.setText("현재 전원 상태");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "거실", "침실1", "침실2", "침실3" }));

        ledTempLabel.setText("ledTempLabel");

        ledOnOffLabel.setText("jLabel23");

        jMenu5.setText("메뉴");

        jMenu6.setText("뒤로가기");
        jMenu6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu6MouseClicked(evt);
            }
        });
        jMenu5.add(jMenu6);

        jMenuBar3.add(jMenu5);

        ledFrame.setJMenuBar(jMenuBar3);

        javax.swing.GroupLayout ledFrameLayout = new javax.swing.GroupLayout(ledFrame.getContentPane());
        ledFrame.getContentPane().setLayout(ledFrameLayout);
        ledFrameLayout.setHorizontalGroup(
            ledFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ledFrameLayout.createSequentialGroup()
                .addGroup(ledFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ledFrameLayout.createSequentialGroup()
                        .addGroup(ledFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ledFrameLayout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(ledFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)))
                            .addGroup(ledFrameLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)))
                        .addGap(38, 38, 38)
                        .addGroup(ledFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ledFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(ledSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(ledFrameLayout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addComponent(jButton6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton7))))
                        .addGap(0, 48, Short.MAX_VALUE))
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(ledFrameLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(ledFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17))
                .addGap(40, 40, 40)
                .addGroup(ledFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ledTempLabel)
                    .addComponent(ledOnOffLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ledFrameLayout.setVerticalGroup(
            ledFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ledFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ledFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(ledFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ledSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(ledFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addGap(42, 42, 42)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(ledFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(ledTempLabel))
                .addGap(32, 32, 32)
                .addGroup(ledFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(ledOnOffLabel))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jLabel8.setFont(new java.awt.Font("맑은 고딕", 1, 15)); // NOI18N
        jLabel8.setText("난방 제어");

        jLabel9.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel9.setText("온도 제어");
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel10.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel10.setText("전원 제어");

        heatingLivingRoomSlider.setMaximum(30);
        heatingLivingRoomSlider.setMinimum(5);
        heatingLivingRoomSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                heatingLivingRoomSliderStateChanged(evt);
            }
        });
        heatingLivingRoomSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                heatingLivingRoomSliderMouseReleased(evt);
            }
        });

        heatingOnLivingRoomBtn.setBackground(new java.awt.Color(0, 0, 0));
        heatingOnLivingRoomBtn.setForeground(new java.awt.Color(255, 255, 255));
        heatingOnLivingRoomBtn.setText("ON");
        heatingOnLivingRoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heatingOnLivingRoomBtnActionPerformed(evt);
            }
        });

        heatingOffLivingRoomBtn.setText("OFF");
        heatingOffLivingRoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heatingOffLivingRoomBtnActionPerformed(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setToolTipText("");

        jLabel14.setFont(new java.awt.Font("맑은 고딕", 0, 13)); // NOI18N
        jLabel14.setText("현재 난방 온도");

        jLabel15.setFont(new java.awt.Font("맑은 고딕", 0, 13)); // NOI18N
        jLabel15.setText("현재 전원 상태");

        heatingLivingRoomTempLabel.setText("jLabel22");

        livingRoomLabel2.setFont(new java.awt.Font("맑은 고딕", 0, 13)); // NOI18N
        livingRoomLabel2.setText("jLabel24");

        jLabel21.setFont(new java.awt.Font("맑은 고딕", 1, 13)); // NOI18N
        jLabel21.setText("거실");

        heatingOnRoom1Btn.setBackground(new java.awt.Color(0, 0, 0));
        heatingOnRoom1Btn.setForeground(new java.awt.Color(255, 255, 255));
        heatingOnRoom1Btn.setText("ON");
        heatingOnRoom1Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heatingOnRoom1BtnActionPerformed(evt);
            }
        });

        heatingOffRoom2Btn.setText("OFF");
        heatingOffRoom2Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heatingOffRoom2BtnActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("맑은 고딕", 0, 13)); // NOI18N
        jLabel23.setText("현재 난방 온도");

        jLabel24.setFont(new java.awt.Font("맑은 고딕", 0, 13)); // NOI18N
        jLabel24.setText("현재 전원 상태");

        jLabel25.setFont(new java.awt.Font("맑은 고딕", 1, 13)); // NOI18N
        jLabel25.setText("침실1");

        room1Label1.setFont(new java.awt.Font("맑은 고딕", 0, 13)); // NOI18N
        room1Label1.setText("jLabel22");

        room1Label2.setFont(new java.awt.Font("맑은 고딕", 0, 13)); // NOI18N
        room1Label2.setText("jLabel24");

        jLabel26.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel26.setText("온도 제어");
        jLabel26.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel27.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel27.setText("전원 제어");

        heatingRoom1Slider.setMaximum(30);
        heatingRoom1Slider.setMinimum(5);
        heatingRoom1Slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                heatingRoom1SliderStateChanged(evt);
            }
        });

        jLabel28.setText("현재 전력 사용량");

        heatingELabel.setText("0 kwh");

        jMenu7.setText("메뉴");
        jMenu7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu7MouseClicked(evt);
            }
        });

        jMenu8.setText("뒤로가기");
        jMenu8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu8MouseClicked(evt);
            }
        });
        jMenu7.add(jMenu8);

        jMenuBar4.add(jMenu7);

        heatingFrame.setJMenuBar(jMenuBar4);

        javax.swing.GroupLayout heatingFrameLayout = new javax.swing.GroupLayout(heatingFrame.getContentPane());
        heatingFrame.getContentPane().setLayout(heatingFrameLayout);
        heatingFrameLayout.setHorizontalGroup(
            heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(heatingFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(heatingFrameLayout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jLabel21)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 328, Short.MAX_VALUE)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, heatingFrameLayout.createSequentialGroup()
                        .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(heatingFrameLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(38, 38, 38)
                                .addComponent(heatingLivingRoomSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(heatingFrameLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(32, 32, 32)
                                .addComponent(heatingOnLivingRoomBtn)
                                .addGap(43, 43, 43)
                                .addComponent(heatingOffLivingRoomBtn))
                            .addGroup(heatingFrameLayout.createSequentialGroup()
                                .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel15))
                                .addGap(39, 39, 39)
                                .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(livingRoomLabel2)
                                    .addComponent(heatingLivingRoomTempLabel))))
                        .addGap(28, 28, 28)))
                .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(heatingFrameLayout.createSequentialGroup()
                            .addComponent(jLabel28)
                            .addGap(49, 49, 49)
                            .addComponent(heatingELabel))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, heatingFrameLayout.createSequentialGroup()
                            .addGap(42, 42, 42)
                            .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(heatingFrameLayout.createSequentialGroup()
                                    .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel24))
                                    .addGap(39, 39, 39)
                                    .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(room1Label1)
                                        .addComponent(room1Label2)))
                                .addGroup(heatingFrameLayout.createSequentialGroup()
                                    .addComponent(jLabel26)
                                    .addGap(38, 38, 38)
                                    .addComponent(heatingRoom1Slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(heatingFrameLayout.createSequentialGroup()
                                    .addComponent(jLabel27)
                                    .addGap(32, 32, 32)
                                    .addComponent(heatingOnRoom1Btn)
                                    .addGap(43, 43, 43)
                                    .addComponent(heatingOffRoom2Btn)))))
                    .addGroup(heatingFrameLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel25)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        heatingFrameLayout.setVerticalGroup(
            heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(heatingFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(heatingFrameLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(heatingOnLivingRoomBtn)
                            .addComponent(heatingOffLivingRoomBtn))
                        .addGap(45, 45, 45)
                        .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(heatingLivingRoomSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(heatingLivingRoomTempLabel))
                        .addGap(18, 18, 18)
                        .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(livingRoomLabel2))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(heatingFrameLayout.createSequentialGroup()
                        .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(heatingELabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(heatingFrameLayout.createSequentialGroup()
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel27)
                                    .addComponent(heatingOnRoom1Btn)
                                    .addComponent(heatingOffRoom2Btn))
                                .addGap(45, 45, 45)
                                .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel26)
                                    .addComponent(heatingRoom1Slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(52, 52, 52)
                                .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel23)
                                    .addComponent(room1Label1))
                                .addGap(18, 18, 18)
                                .addGroup(heatingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel24)
                                    .addComponent(room1Label2)))
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29))))
        );

        jLabel20.setText("jLabel20");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("맑은 고딕", 0, 18)); // NOI18N
        jLabel1.setText("기기제어");

        btn_heatingCommand.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        btn_heatingCommand.setText("난방 제어");
        btn_heatingCommand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_heatingCommandActionPerformed(evt);
            }
        });

        btn_ledCommand.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        btn_ledCommand.setText("LED 조명 제어");
        btn_ledCommand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ledCommandActionPerformed(evt);
            }
        });

        btn_refCommand.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        btn_refCommand.setText("냉장고 제어");
        btn_refCommand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refCommandActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("맑은 고딕", 0, 13)); // NOI18N
        jLabel11.setText("난방의 온도 및 전원을 제어합니다.");

        jLabel12.setFont(new java.awt.Font("맑은 고딕", 0, 13)); // NOI18N
        jLabel12.setText("LED 조명의 밝기 및 전원을 제어합니다.");

        jLabel13.setFont(new java.awt.Font("맑은 고딕", 0, 13)); // NOI18N
        jLabel13.setText("냉장고의 온도 및 전원을 제어합니다.");

        commandMainLabel.setText("현재 기기 전력 사용량");

        usedELabel.setForeground(new java.awt.Color(0, 153, 204));
        usedELabel.setText("jLabel21");

        jMenu1.setText("메뉴");

        jMenu2.setText("뒤로가기");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenu2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator6)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_heatingCommand, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_ledCommand, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_refCommand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13))
                .addGap(36, 36, 36))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(usedELabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(commandMainLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(commandMainLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usedELabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_heatingCommand, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(36, 36, 36)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_ledCommand, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(27, 27, 27)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_refCommand, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ledCommandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ledCommandActionPerformed
        // TODO add your handling code here:
        this.dispose();
        ledFrame.setVisible(true);
        ledFrame.setTitle("LED 조명 제어");
        ledFrame.setSize(500,650);  
        ledFrame.setLocation(900,250);    
        ledFrame.setResizable(false);
        ledFrame.setLocationRelativeTo(null);
        ledFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btn_ledCommandActionPerformed

    private void btn_heatingCommandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_heatingCommandActionPerformed
        // TODO add your handling code here:
        this.dispose();
        heatingFrame.setVisible(true);
        heatingFrame.setTitle("난방 기기 제어");
        heatingFrame.setSize(800,650);  
        heatingFrame.setLocation(900,250);    
        heatingFrame.setResizable(false);
        heatingFrame.setLocationRelativeTo(null);
        heatingFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        if(heatingLivingRoomOnOffState.equals("ON")) {
             heatingLivingRoomSlider. setEnabled(true); 
        }
        else  if(refOnOffState.equals("OFF")) {
             heatingLivingRoomSlider. setEnabled(false); 
        }
    }//GEN-LAST:event_btn_heatingCommandActionPerformed

    private void btn_refCommandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refCommandActionPerformed
        // TODO add your handling code here:
        this.dispose();
        refFrame.setVisible(true);
       
        refFrame.setTitle("냉장고 제어");
        refFrame.setSize(500,650);  
        refFrame.setLocation(900,250);     
        refFrame.setResizable(false);
        refFrame.setLocationRelativeTo(null);
       // refFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        if(refOnOffState.equals("ON")) {
             refSlider. setEnabled(true); 
        }
        else  if(refOnOffState.equals("OFF")) {
             refSlider. setEnabled(false); 
        }
    }//GEN-LAST:event_btn_refCommandActionPerformed

    private void refOnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refOnBtnActionPerformed
        // TODO add your handling code here:
        if(refOnOffState.equals("ON")) {
             JOptionPane.showMessageDialog(null, "이미 전원이 켜져있습니다.\n",
                            "ERROR_MESSAGE", JOptionPane.ERROR_MESSAGE);
             return;
        }
                
        refOnOffState="ON";
        refOnOffLabel.setText(refOnOffState);
        refSlider. setEnabled(true); 
        refSlider. setValue(3); 
        refTempLabel.setText(refSlider.getValue()+"");
        
        RefrigeratorOnCommand kitchenRefrigeratorOn = new RefrigeratorOnCommand(kitchenRefrigerator); // on명령 생성 및 리시버 연결
        remote.setOnOffCommand(Receiver.REF.ordinal(), kitchenRefrigeratorOn, none); // 2번 슬롯(냉장고)의  on 명령 전달
        remote.onButtonWasPushed(Receiver.REF.ordinal()); // 2번 슬롯의 on 명령 실행
        
        refELabel.setText(kitchenRefrigerator.getUsedEnergy()+" KWh"); // 현재 냉장고 사용 전력을 화면 텍스트로 표시
        
        usedRefEnergy+=kitchenRefrigerator.getUsedEnergy(); // 냉장고 누적 전기 사용량 
       
         usedELabel.setText(usedRefEnergy+usedLedEnergy+usedHeatingEnergy+""); // 메인화면 전체 누적 전기 사용량

        
    }//GEN-LAST:event_refOnBtnActionPerformed

    private void refOffBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refOffBtnActionPerformed
        // TODO add your handling code here:
                if(refOnOffState.equals("OFF")) {
             JOptionPane.showMessageDialog(null, "이미 전원이 꺼져있습니다.\n",
                            "ERROR_MESSAGE", JOptionPane.ERROR_MESSAGE);
             return;
        }
                
            refOnOffState="OFF";
            refOnOffLabel.setText(refOnOffState);
            refSlider. setEnabled(false); 
            refTempLabel.setText(0+"");
            
            RefrigeratorOffCommand kitchenRefrigeratorOff = new RefrigeratorOffCommand(kitchenRefrigerator); // off명령 생성 및 리시버 연결
            remote.setOnOffCommand(Receiver.REF.ordinal(), none, kitchenRefrigeratorOff); // 2번 슬롯(냉장고)의  off 명령 전달
            remote.offButtonWasPushed(Receiver.REF.ordinal());// 2번 슬롯의 off 명령 실행
            
             refELabel.setText("0 KWh");
             
      
            usedELabel.setText(usedRefEnergy+usedLedEnergy+usedHeatingEnergy+""); // 메인화면 전체 누적 전기 사용량
             
  
    }//GEN-LAST:event_refOffBtnActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void heatingOnLivingRoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heatingOnLivingRoomBtnActionPerformed
        // TODO add your handling code here:
        
        livingRoomHeating = new Heating("Living Room"); // 거실 난방 리시버 생성
        if(heatingLivingRoomOnOffState.equals("ON")) {
             JOptionPane.showMessageDialog(null, "이미 전원이 켜져있습니다.\n",
                            "ERROR_MESSAGE", JOptionPane.ERROR_MESSAGE);
             return;
        }
        heatingLivingRoomOnOffState="ON";        
        livingRoomLabel2.setText(heatingLivingRoomOnOffState); // 거실 난방 전원 텍스트 설정
        heatingLivingRoomSlider.setEnabled(true);  // 전원이 켜지면 온도조절 슬라이더를 사용가능하게 함. 
        heatingLivingRoomSlider. setValue(20); // 온도의 기본값으로 20도를 줌.
        heatingLivingRoomTempLabel.setText(heatingLivingRoomSlider.getValue()+""); // 슬라이더에서 얻어온 값으로 거실 난방 온도 텍스트 설정.

        HeatingOnCommand  livingRoomHeatingOn = new HeatingOnCommand(livingRoomHeating); // 커맨드 생성
        remote.setOnOffCommand(Receiver.HEATING.ordinal(),  livingRoomHeatingOn, none);
        remote.onButtonWasPushed(Receiver.HEATING.ordinal()); // 0번 슬롯의 on 명령 실행
 
        
        usedHeatingEnergy+=livingRoomHeating.getUsedEnergy(); // 난방기 누적 전기 사용량 업데이트
        
        heatingELabel.setText(livingRoomHeating.getUsedEnergy()+" KWh");
        
        
        usedELabel.setText(usedRefEnergy+usedLedEnergy+usedHeatingEnergy+""); // 메인화면 전체 누적 전기 사용량

 
    }//GEN-LAST:event_heatingOnLivingRoomBtnActionPerformed

    private void heatingOffLivingRoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heatingOffLivingRoomBtnActionPerformed
        // TODO add your handling code here:
        livingRoomHeating = new Heating("Living Room"); // 거실 난방 리시버 생성
                if(heatingLivingRoomOnOffState.equals("OFF")) {
             JOptionPane.showMessageDialog(null, "이미 전원이 꺼져있습니다.\n",
                            "ERROR_MESSAGE", JOptionPane.ERROR_MESSAGE);
             return;
        }
        heatingLivingRoomOnOffState="OFF";        
        livingRoomLabel2.setText(heatingLivingRoomOnOffState); // 거실 난방 전원 텍스트 설정
        heatingLivingRoomSlider.setEnabled(false);  // 전원이 켜지면 온도조절 슬라이더를 사용가능하게 함. 
        heatingLivingRoomTempLabel.setText(0+""); // 슬라이더에서 얻어온 값으로 거실 난방 온도 텍스트 설정.

       HeatingOffCommand  livingRoomHeatingOff = new HeatingOffCommand(livingRoomHeating); // 커맨드 생성
        remote.setOnOffCommand(Receiver.HEATING.ordinal(), none,  livingRoomHeatingOff);
        remote.offButtonWasPushed(Receiver.HEATING.ordinal()); 

        
        usedHeatingEnergy+=livingRoomHeating.getUsedEnergy(); // 난방기 누적 전기 사용량 업데이트
        
        heatingELabel.setText("0 KWh");

        
        usedELabel.setText(usedRefEnergy+usedLedEnergy+usedHeatingEnergy+""); // 메인화면 전체 누적 전기 사용량
    }//GEN-LAST:event_heatingOffLivingRoomBtnActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        // TODO add your handling code here:
        MainDisplay dis = new MainDisplay();
        dis.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        // TODO add your handling code here:
          refFrame.dispose(); 
          this.setVisible(true);
          // usedELabel.setText(usedRefEnergy+"");
    }//GEN-LAST:event_jMenu4MouseClicked

    private void jMenu6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu6MouseClicked
        // TODO add your handling code here:
          ledFrame.dispose(); 
          this.setVisible(true);
         //  usedELabel.setText(usedRefEnergy+"");
    }//GEN-LAST:event_jMenu6MouseClicked

    private void jMenu7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu7MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jMenu7MouseClicked

    private void jMenu8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu8MouseClicked
        // TODO add your handling code here:
         heatingFrame.dispose(); 
          this.setVisible(true);
        //   usedELabel.setText(usedRefEnergy+"");
    }//GEN-LAST:event_jMenu8MouseClicked

    private void refSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_refSliderStateChanged
        // TODO add your handling code here:
        

    }//GEN-LAST:event_refSliderStateChanged

    private void heatingLivingRoomSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_heatingLivingRoomSliderStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_heatingLivingRoomSliderStateChanged

    private void ledSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ledSliderStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_ledSliderStateChanged

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenu2MouseClicked

    private void refSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refSliderMouseReleased
        // TODO add your handling code here:

        refTempLabel.setText(refSlider.getValue()+"");
        

        if(refSlider.getValue() >=0 && refSlider.getValue() <= 1)  {
             JOptionPane.showMessageDialog(null, "적정 온도(2°C ~ 4°C)보다 낮은 온도로 설정하여 소비전력량이 증가합니다.\n");
             usedRefEnergy+=3;
        }

         if(refSlider.getValue() >=5 && refSlider.getValue() <= 6)  {
             JOptionPane.showMessageDialog(null, "적정 온도(2°C ~ 4°C)보다 높은 온도로 설정하여 벗어나 소비전력량이 감소합니다.\n");
             usedRefEnergy+=1;
        }
           refELabel.setText(usedRefEnergy + " KWh");
        usedELabel.setText(usedRefEnergy+usedLedEnergy+usedHeatingEnergy+""); // 메인화면 전체 누적 전기 사용량
    }//GEN-LAST:event_refSliderMouseReleased

    private void refSliderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refSliderMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_refSliderMousePressed

    private void heatingOnRoom1BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heatingOnRoom1BtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_heatingOnRoom1BtnActionPerformed

    private void heatingOffRoom2BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heatingOffRoom2BtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_heatingOffRoom2BtnActionPerformed

    private void heatingRoom1SliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_heatingRoom1SliderStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_heatingRoom1SliderStateChanged

    private void heatingLivingRoomSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_heatingLivingRoomSliderMouseReleased
        // TODO add your handling code here:
 
        heatingLivingRoomTempLabel.setText(heatingLivingRoomSlider.getValue()+"");
        

        if(heatingLivingRoomSlider.getValue() > 25 && heatingLivingRoomSlider.getValue() <= 30)  {
             JOptionPane.showMessageDialog(null, "적정 온도(16°C ~ 25°C)보다 높은 온도로 설정하여 소비전력량이 증가합니다.\n");
             usedHeatingEnergy+=3;
        }

         if(heatingLivingRoomSlider.getValue() >=5 && heatingLivingRoomSlider.getValue() < 15)  {
             JOptionPane.showMessageDialog(null, "적정 온도(16°C ~ 25°C)보다 낮은 온도로 설정하여 소비전력량이 감소합니다.\n");
             usedHeatingEnergy+=1;
        }
           heatingELabel.setText(usedHeatingEnergy + " KWh");
           usedELabel.setText(usedRefEnergy+usedLedEnergy+usedHeatingEnergy+""); // 메인화면 전체 누적 전기 사용량
    }//GEN-LAST:event_heatingLivingRoomSliderMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_Command.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_Command.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_Command.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_Command.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_Command().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_heatingCommand;
    private javax.swing.JButton btn_ledCommand;
    private javax.swing.JButton btn_refCommand;
    private javax.swing.JLabel commandMainLabel;
    private javax.swing.JLabel heatingELabel;
    private javax.swing.JFrame heatingFrame;
    private javax.swing.JSlider heatingLivingRoomSlider;
    private javax.swing.JLabel heatingLivingRoomTempLabel;
    private javax.swing.JButton heatingOffLivingRoomBtn;
    private javax.swing.JButton heatingOffRoom2Btn;
    private javax.swing.JButton heatingOnLivingRoomBtn;
    private javax.swing.JButton heatingOnRoom1Btn;
    private javax.swing.JSlider heatingRoom1Slider;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuBar jMenuBar4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JFrame ledFrame;
    private javax.swing.JLabel ledOnOffLabel;
    private javax.swing.JSlider ledSlider;
    private javax.swing.JLabel ledTempLabel;
    private javax.swing.JLabel livingRoomLabel2;
    private javax.swing.JLabel refELabel;
    private javax.swing.JFrame refFrame;
    private javax.swing.JButton refOffBtn;
    private javax.swing.JButton refOnBtn;
    private javax.swing.JLabel refOnOffLabel;
    private javax.swing.JSlider refSlider;
    private javax.swing.JLabel refTempLabel;
    private javax.swing.JLabel room1Label1;
    private javax.swing.JLabel room1Label2;
    private javax.swing.JLabel usedELabel;
    // End of variables declaration//GEN-END:variables
}
